// <auto-generated />
using System;
using Crypto.Core.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crypto.Core.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240605110043_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Crypto.Core.Entities.TokenEntity", b =>
                {
                    b.Property<string>("TokenCode")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR");

                    b.HasKey("TokenCode");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Crypto.Core.Entities.TokenExchangeHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExchangeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("TokenCode")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("TokenCode");

                    b.ToTable("TokensExchangeHistory");
                });

            modelBuilder.Entity("Crypto.Core.Entities.TokenValueHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("TokenCode")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("TokenCode");

                    b.ToTable("TokensValueHistory");
                });

            modelBuilder.Entity("Crypto.Core.Entities.TokenExchangeHistoryEntity", b =>
                {
                    b.HasOne("Crypto.Core.Entities.TokenEntity", "Token")
                        .WithMany("ExchangeHistory")
                        .HasForeignKey("TokenCode");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Crypto.Core.Entities.TokenValueHistoryEntity", b =>
                {
                    b.HasOne("Crypto.Core.Entities.TokenEntity", "Token")
                        .WithMany("ValueHistory")
                        .HasForeignKey("TokenCode");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Crypto.Core.Entities.TokenEntity", b =>
                {
                    b.Navigation("ExchangeHistory");

                    b.Navigation("ValueHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
